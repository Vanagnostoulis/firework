// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: varint.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "varint.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace test {

namespace {

const ::google::protobuf::Descriptor* Varint32_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Varint32_reflection_ = NULL;
const ::google::protobuf::Descriptor* Varint64_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Varint64_reflection_ = NULL;
const ::google::protobuf::Descriptor* Varint32Array_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Varint32Array_reflection_ = NULL;
const ::google::protobuf::Descriptor* Varint64Array_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Varint64Array_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_varint_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_varint_2eproto() {
  protobuf_AddDesc_varint_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "varint.proto");
  GOOGLE_CHECK(file != NULL);
  Varint32_descriptor_ = file->message_type(0);
  static const int Varint32_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Varint32, myint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Varint32, myuint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Varint32, mysint32_),
  };
  Varint32_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Varint32_descriptor_,
      Varint32::default_instance_,
      Varint32_offsets_,
      -1,
      -1,
      -1,
      sizeof(Varint32),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Varint32, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Varint32, _is_default_instance_));
  Varint64_descriptor_ = file->message_type(1);
  static const int Varint64_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Varint64, myint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Varint64, myuint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Varint64, mysint64_),
  };
  Varint64_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Varint64_descriptor_,
      Varint64::default_instance_,
      Varint64_offsets_,
      -1,
      -1,
      -1,
      sizeof(Varint64),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Varint64, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Varint64, _is_default_instance_));
  Varint32Array_descriptor_ = file->message_type(2);
  static const int Varint32Array_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Varint32Array, varint32_),
  };
  Varint32Array_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Varint32Array_descriptor_,
      Varint32Array::default_instance_,
      Varint32Array_offsets_,
      -1,
      -1,
      -1,
      sizeof(Varint32Array),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Varint32Array, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Varint32Array, _is_default_instance_));
  Varint64Array_descriptor_ = file->message_type(3);
  static const int Varint64Array_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Varint64Array, varint64_),
  };
  Varint64Array_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Varint64Array_descriptor_,
      Varint64Array::default_instance_,
      Varint64Array_offsets_,
      -1,
      -1,
      -1,
      sizeof(Varint64Array),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Varint64Array, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Varint64Array, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_varint_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Varint32_descriptor_, &Varint32::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Varint64_descriptor_, &Varint64::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Varint32Array_descriptor_, &Varint32Array::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Varint64Array_descriptor_, &Varint64Array::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_varint_2eproto() {
  delete Varint32::default_instance_;
  delete Varint32_reflection_;
  delete Varint64::default_instance_;
  delete Varint64_reflection_;
  delete Varint32Array::default_instance_;
  delete Varint32Array_reflection_;
  delete Varint64Array::default_instance_;
  delete Varint64Array_reflection_;
}

void protobuf_AddDesc_varint_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_varint_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014varint.proto\022\004test\"\?\n\010Varint32\022\017\n\007myIn"
    "t32\030\001 \001(\005\022\020\n\010myUint32\030\002 \001(\r\022\020\n\010mySint32\030"
    "\003 \001(\021\"\?\n\010Varint64\022\017\n\007myInt64\030\001 \001(\003\022\020\n\010my"
    "Uint64\030\002 \001(\004\022\020\n\010mySint64\030\003 \001(\022\"1\n\rVarint"
    "32Array\022 \n\010varint32\030\001 \003(\0132\016.test.Varint3"
    "2\"1\n\rVarint64Array\022 \n\010varint64\030\001 \003(\0132\016.t"
    "est.Varint64b\006proto3", 260);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "varint.proto", &protobuf_RegisterTypes);
  Varint32::default_instance_ = new Varint32();
  Varint64::default_instance_ = new Varint64();
  Varint32Array::default_instance_ = new Varint32Array();
  Varint64Array::default_instance_ = new Varint64Array();
  Varint32::default_instance_->InitAsDefaultInstance();
  Varint64::default_instance_->InitAsDefaultInstance();
  Varint32Array::default_instance_->InitAsDefaultInstance();
  Varint64Array::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_varint_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_varint_2eproto {
  StaticDescriptorInitializer_varint_2eproto() {
    protobuf_AddDesc_varint_2eproto();
  }
} static_descriptor_initializer_varint_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Varint32::kMyInt32FieldNumber;
const int Varint32::kMyUint32FieldNumber;
const int Varint32::kMySint32FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Varint32::Varint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:test.Varint32)
}

void Varint32::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Varint32::Varint32(const Varint32& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:test.Varint32)
}

void Varint32::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  myint32_ = 0;
  myuint32_ = 0u;
  mysint32_ = 0;
}

Varint32::~Varint32() {
  // @@protoc_insertion_point(destructor:test.Varint32)
  SharedDtor();
}

void Varint32::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Varint32::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Varint32::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Varint32_descriptor_;
}

const Varint32& Varint32::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_varint_2eproto();
  return *default_instance_;
}

Varint32* Varint32::default_instance_ = NULL;

Varint32* Varint32::New(::google::protobuf::Arena* arena) const {
  Varint32* n = new Varint32;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Varint32::Clear() {
// @@protoc_insertion_point(message_clear_start:test.Varint32)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Varint32, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Varint32*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(myint32_, mysint32_);

#undef ZR_HELPER_
#undef ZR_

}

bool Varint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:test.Varint32)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 myInt32 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &myint32_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_myUint32;
        break;
      }

      // optional uint32 myUint32 = 2;
      case 2: {
        if (tag == 16) {
         parse_myUint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myuint32_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mySint32;
        break;
      }

      // optional sint32 mySint32 = 3;
      case 3: {
        if (tag == 24) {
         parse_mySint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &mysint32_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:test.Varint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:test.Varint32)
  return false;
#undef DO_
}

void Varint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:test.Varint32)
  // optional int32 myInt32 = 1;
  if (this->myint32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->myint32(), output);
  }

  // optional uint32 myUint32 = 2;
  if (this->myuint32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->myuint32(), output);
  }

  // optional sint32 mySint32 = 3;
  if (this->mysint32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->mysint32(), output);
  }

  // @@protoc_insertion_point(serialize_end:test.Varint32)
}

::google::protobuf::uint8* Varint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:test.Varint32)
  // optional int32 myInt32 = 1;
  if (this->myint32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->myint32(), target);
  }

  // optional uint32 myUint32 = 2;
  if (this->myuint32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->myuint32(), target);
  }

  // optional sint32 mySint32 = 3;
  if (this->mysint32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->mysint32(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:test.Varint32)
  return target;
}

int Varint32::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:test.Varint32)
  int total_size = 0;

  // optional int32 myInt32 = 1;
  if (this->myint32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->myint32());
  }

  // optional uint32 myUint32 = 2;
  if (this->myuint32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->myuint32());
  }

  // optional sint32 mySint32 = 3;
  if (this->mysint32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->mysint32());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Varint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:test.Varint32)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Varint32* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Varint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:test.Varint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:test.Varint32)
    MergeFrom(*source);
  }
}

void Varint32::MergeFrom(const Varint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:test.Varint32)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.myint32() != 0) {
    set_myint32(from.myint32());
  }
  if (from.myuint32() != 0) {
    set_myuint32(from.myuint32());
  }
  if (from.mysint32() != 0) {
    set_mysint32(from.mysint32());
  }
}

void Varint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:test.Varint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Varint32::CopyFrom(const Varint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test.Varint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Varint32::IsInitialized() const {

  return true;
}

void Varint32::Swap(Varint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Varint32::InternalSwap(Varint32* other) {
  std::swap(myint32_, other->myint32_);
  std::swap(myuint32_, other->myuint32_);
  std::swap(mysint32_, other->mysint32_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Varint32::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Varint32_descriptor_;
  metadata.reflection = Varint32_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Varint32

// optional int32 myInt32 = 1;
void Varint32::clear_myint32() {
  myint32_ = 0;
}
 ::google::protobuf::int32 Varint32::myint32() const {
  // @@protoc_insertion_point(field_get:test.Varint32.myInt32)
  return myint32_;
}
 void Varint32::set_myint32(::google::protobuf::int32 value) {
  
  myint32_ = value;
  // @@protoc_insertion_point(field_set:test.Varint32.myInt32)
}

// optional uint32 myUint32 = 2;
void Varint32::clear_myuint32() {
  myuint32_ = 0u;
}
 ::google::protobuf::uint32 Varint32::myuint32() const {
  // @@protoc_insertion_point(field_get:test.Varint32.myUint32)
  return myuint32_;
}
 void Varint32::set_myuint32(::google::protobuf::uint32 value) {
  
  myuint32_ = value;
  // @@protoc_insertion_point(field_set:test.Varint32.myUint32)
}

// optional sint32 mySint32 = 3;
void Varint32::clear_mysint32() {
  mysint32_ = 0;
}
 ::google::protobuf::int32 Varint32::mysint32() const {
  // @@protoc_insertion_point(field_get:test.Varint32.mySint32)
  return mysint32_;
}
 void Varint32::set_mysint32(::google::protobuf::int32 value) {
  
  mysint32_ = value;
  // @@protoc_insertion_point(field_set:test.Varint32.mySint32)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Varint64::kMyInt64FieldNumber;
const int Varint64::kMyUint64FieldNumber;
const int Varint64::kMySint64FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Varint64::Varint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:test.Varint64)
}

void Varint64::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Varint64::Varint64(const Varint64& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:test.Varint64)
}

void Varint64::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  myint64_ = GOOGLE_LONGLONG(0);
  myuint64_ = GOOGLE_ULONGLONG(0);
  mysint64_ = GOOGLE_LONGLONG(0);
}

Varint64::~Varint64() {
  // @@protoc_insertion_point(destructor:test.Varint64)
  SharedDtor();
}

void Varint64::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Varint64::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Varint64::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Varint64_descriptor_;
}

const Varint64& Varint64::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_varint_2eproto();
  return *default_instance_;
}

Varint64* Varint64::default_instance_ = NULL;

Varint64* Varint64::New(::google::protobuf::Arena* arena) const {
  Varint64* n = new Varint64;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Varint64::Clear() {
// @@protoc_insertion_point(message_clear_start:test.Varint64)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Varint64, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Varint64*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(myint64_, mysint64_);

#undef ZR_HELPER_
#undef ZR_

}

bool Varint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:test.Varint64)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 myInt64 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &myint64_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_myUint64;
        break;
      }

      // optional uint64 myUint64 = 2;
      case 2: {
        if (tag == 16) {
         parse_myUint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &myuint64_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mySint64;
        break;
      }

      // optional sint64 mySint64 = 3;
      case 3: {
        if (tag == 24) {
         parse_mySint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &mysint64_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:test.Varint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:test.Varint64)
  return false;
#undef DO_
}

void Varint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:test.Varint64)
  // optional int64 myInt64 = 1;
  if (this->myint64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->myint64(), output);
  }

  // optional uint64 myUint64 = 2;
  if (this->myuint64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->myuint64(), output);
  }

  // optional sint64 mySint64 = 3;
  if (this->mysint64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(3, this->mysint64(), output);
  }

  // @@protoc_insertion_point(serialize_end:test.Varint64)
}

::google::protobuf::uint8* Varint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:test.Varint64)
  // optional int64 myInt64 = 1;
  if (this->myint64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->myint64(), target);
  }

  // optional uint64 myUint64 = 2;
  if (this->myuint64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->myuint64(), target);
  }

  // optional sint64 mySint64 = 3;
  if (this->mysint64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(3, this->mysint64(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:test.Varint64)
  return target;
}

int Varint64::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:test.Varint64)
  int total_size = 0;

  // optional int64 myInt64 = 1;
  if (this->myint64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->myint64());
  }

  // optional uint64 myUint64 = 2;
  if (this->myuint64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->myuint64());
  }

  // optional sint64 mySint64 = 3;
  if (this->mysint64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->mysint64());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Varint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:test.Varint64)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Varint64* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Varint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:test.Varint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:test.Varint64)
    MergeFrom(*source);
  }
}

void Varint64::MergeFrom(const Varint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:test.Varint64)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.myint64() != 0) {
    set_myint64(from.myint64());
  }
  if (from.myuint64() != 0) {
    set_myuint64(from.myuint64());
  }
  if (from.mysint64() != 0) {
    set_mysint64(from.mysint64());
  }
}

void Varint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:test.Varint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Varint64::CopyFrom(const Varint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test.Varint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Varint64::IsInitialized() const {

  return true;
}

void Varint64::Swap(Varint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Varint64::InternalSwap(Varint64* other) {
  std::swap(myint64_, other->myint64_);
  std::swap(myuint64_, other->myuint64_);
  std::swap(mysint64_, other->mysint64_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Varint64::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Varint64_descriptor_;
  metadata.reflection = Varint64_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Varint64

// optional int64 myInt64 = 1;
void Varint64::clear_myint64() {
  myint64_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Varint64::myint64() const {
  // @@protoc_insertion_point(field_get:test.Varint64.myInt64)
  return myint64_;
}
 void Varint64::set_myint64(::google::protobuf::int64 value) {
  
  myint64_ = value;
  // @@protoc_insertion_point(field_set:test.Varint64.myInt64)
}

// optional uint64 myUint64 = 2;
void Varint64::clear_myuint64() {
  myuint64_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Varint64::myuint64() const {
  // @@protoc_insertion_point(field_get:test.Varint64.myUint64)
  return myuint64_;
}
 void Varint64::set_myuint64(::google::protobuf::uint64 value) {
  
  myuint64_ = value;
  // @@protoc_insertion_point(field_set:test.Varint64.myUint64)
}

// optional sint64 mySint64 = 3;
void Varint64::clear_mysint64() {
  mysint64_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Varint64::mysint64() const {
  // @@protoc_insertion_point(field_get:test.Varint64.mySint64)
  return mysint64_;
}
 void Varint64::set_mysint64(::google::protobuf::int64 value) {
  
  mysint64_ = value;
  // @@protoc_insertion_point(field_set:test.Varint64.mySint64)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Varint32Array::kVarint32FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Varint32Array::Varint32Array()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:test.Varint32Array)
}

void Varint32Array::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Varint32Array::Varint32Array(const Varint32Array& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:test.Varint32Array)
}

void Varint32Array::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Varint32Array::~Varint32Array() {
  // @@protoc_insertion_point(destructor:test.Varint32Array)
  SharedDtor();
}

void Varint32Array::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Varint32Array::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Varint32Array::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Varint32Array_descriptor_;
}

const Varint32Array& Varint32Array::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_varint_2eproto();
  return *default_instance_;
}

Varint32Array* Varint32Array::default_instance_ = NULL;

Varint32Array* Varint32Array::New(::google::protobuf::Arena* arena) const {
  Varint32Array* n = new Varint32Array;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Varint32Array::Clear() {
// @@protoc_insertion_point(message_clear_start:test.Varint32Array)
  varint32_.Clear();
}

bool Varint32Array::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:test.Varint32Array)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .test.Varint32 varint32 = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_varint32:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_varint32()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_varint32;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:test.Varint32Array)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:test.Varint32Array)
  return false;
#undef DO_
}

void Varint32Array::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:test.Varint32Array)
  // repeated .test.Varint32 varint32 = 1;
  for (unsigned int i = 0, n = this->varint32_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->varint32(i), output);
  }

  // @@protoc_insertion_point(serialize_end:test.Varint32Array)
}

::google::protobuf::uint8* Varint32Array::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:test.Varint32Array)
  // repeated .test.Varint32 varint32 = 1;
  for (unsigned int i = 0, n = this->varint32_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->varint32(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:test.Varint32Array)
  return target;
}

int Varint32Array::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:test.Varint32Array)
  int total_size = 0;

  // repeated .test.Varint32 varint32 = 1;
  total_size += 1 * this->varint32_size();
  for (int i = 0; i < this->varint32_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->varint32(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Varint32Array::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:test.Varint32Array)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Varint32Array* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Varint32Array>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:test.Varint32Array)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:test.Varint32Array)
    MergeFrom(*source);
  }
}

void Varint32Array::MergeFrom(const Varint32Array& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:test.Varint32Array)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  varint32_.MergeFrom(from.varint32_);
}

void Varint32Array::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:test.Varint32Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Varint32Array::CopyFrom(const Varint32Array& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test.Varint32Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Varint32Array::IsInitialized() const {

  return true;
}

void Varint32Array::Swap(Varint32Array* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Varint32Array::InternalSwap(Varint32Array* other) {
  varint32_.UnsafeArenaSwap(&other->varint32_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Varint32Array::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Varint32Array_descriptor_;
  metadata.reflection = Varint32Array_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Varint32Array

// repeated .test.Varint32 varint32 = 1;
int Varint32Array::varint32_size() const {
  return varint32_.size();
}
void Varint32Array::clear_varint32() {
  varint32_.Clear();
}
const ::test::Varint32& Varint32Array::varint32(int index) const {
  // @@protoc_insertion_point(field_get:test.Varint32Array.varint32)
  return varint32_.Get(index);
}
::test::Varint32* Varint32Array::mutable_varint32(int index) {
  // @@protoc_insertion_point(field_mutable:test.Varint32Array.varint32)
  return varint32_.Mutable(index);
}
::test::Varint32* Varint32Array::add_varint32() {
  // @@protoc_insertion_point(field_add:test.Varint32Array.varint32)
  return varint32_.Add();
}
::google::protobuf::RepeatedPtrField< ::test::Varint32 >*
Varint32Array::mutable_varint32() {
  // @@protoc_insertion_point(field_mutable_list:test.Varint32Array.varint32)
  return &varint32_;
}
const ::google::protobuf::RepeatedPtrField< ::test::Varint32 >&
Varint32Array::varint32() const {
  // @@protoc_insertion_point(field_list:test.Varint32Array.varint32)
  return varint32_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Varint64Array::kVarint64FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Varint64Array::Varint64Array()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:test.Varint64Array)
}

void Varint64Array::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Varint64Array::Varint64Array(const Varint64Array& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:test.Varint64Array)
}

void Varint64Array::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Varint64Array::~Varint64Array() {
  // @@protoc_insertion_point(destructor:test.Varint64Array)
  SharedDtor();
}

void Varint64Array::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Varint64Array::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Varint64Array::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Varint64Array_descriptor_;
}

const Varint64Array& Varint64Array::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_varint_2eproto();
  return *default_instance_;
}

Varint64Array* Varint64Array::default_instance_ = NULL;

Varint64Array* Varint64Array::New(::google::protobuf::Arena* arena) const {
  Varint64Array* n = new Varint64Array;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Varint64Array::Clear() {
// @@protoc_insertion_point(message_clear_start:test.Varint64Array)
  varint64_.Clear();
}

bool Varint64Array::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:test.Varint64Array)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .test.Varint64 varint64 = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_varint64:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_varint64()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_varint64;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:test.Varint64Array)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:test.Varint64Array)
  return false;
#undef DO_
}

void Varint64Array::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:test.Varint64Array)
  // repeated .test.Varint64 varint64 = 1;
  for (unsigned int i = 0, n = this->varint64_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->varint64(i), output);
  }

  // @@protoc_insertion_point(serialize_end:test.Varint64Array)
}

::google::protobuf::uint8* Varint64Array::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:test.Varint64Array)
  // repeated .test.Varint64 varint64 = 1;
  for (unsigned int i = 0, n = this->varint64_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->varint64(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:test.Varint64Array)
  return target;
}

int Varint64Array::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:test.Varint64Array)
  int total_size = 0;

  // repeated .test.Varint64 varint64 = 1;
  total_size += 1 * this->varint64_size();
  for (int i = 0; i < this->varint64_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->varint64(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Varint64Array::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:test.Varint64Array)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Varint64Array* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Varint64Array>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:test.Varint64Array)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:test.Varint64Array)
    MergeFrom(*source);
  }
}

void Varint64Array::MergeFrom(const Varint64Array& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:test.Varint64Array)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  varint64_.MergeFrom(from.varint64_);
}

void Varint64Array::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:test.Varint64Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Varint64Array::CopyFrom(const Varint64Array& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test.Varint64Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Varint64Array::IsInitialized() const {

  return true;
}

void Varint64Array::Swap(Varint64Array* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Varint64Array::InternalSwap(Varint64Array* other) {
  varint64_.UnsafeArenaSwap(&other->varint64_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Varint64Array::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Varint64Array_descriptor_;
  metadata.reflection = Varint64Array_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Varint64Array

// repeated .test.Varint64 varint64 = 1;
int Varint64Array::varint64_size() const {
  return varint64_.size();
}
void Varint64Array::clear_varint64() {
  varint64_.Clear();
}
const ::test::Varint64& Varint64Array::varint64(int index) const {
  // @@protoc_insertion_point(field_get:test.Varint64Array.varint64)
  return varint64_.Get(index);
}
::test::Varint64* Varint64Array::mutable_varint64(int index) {
  // @@protoc_insertion_point(field_mutable:test.Varint64Array.varint64)
  return varint64_.Mutable(index);
}
::test::Varint64* Varint64Array::add_varint64() {
  // @@protoc_insertion_point(field_add:test.Varint64Array.varint64)
  return varint64_.Add();
}
::google::protobuf::RepeatedPtrField< ::test::Varint64 >*
Varint64Array::mutable_varint64() {
  // @@protoc_insertion_point(field_mutable_list:test.Varint64Array.varint64)
  return &varint64_;
}
const ::google::protobuf::RepeatedPtrField< ::test::Varint64 >&
Varint64Array::varint64() const {
  // @@protoc_insertion_point(field_list:test.Varint64Array.varint64)
  return varint64_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace test

// @@protoc_insertion_point(global_scope)
